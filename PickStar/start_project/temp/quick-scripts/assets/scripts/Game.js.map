{"version":3,"sources":["Game.js"],"names":["cc","Class","extends","Component","properties","starPrefab","default","type","Prefab","maxStarDuration","minStarDuration","ground","Node","player","scoreDisplay","Label","scoreAudio","AudioClip","listener","lg","s","console","log","onTouchBegan","touch","event","target","getCurrentTarget","x","getLocation","getComponent","accLeft","accRight","onTouchMoved","onTouchEnded","onLoad","groundY","y","height","timer","starDuration","spawnNewStar","score","game","EventListener","create","TOUCH_ONE_BY_ONE","swallowTouches","bind","eventManager","addListener","newStar","instantiate","node","addChild","setPosition","getNewStarPosition","Math","random","randX","randY","jumpHeight","maxX","width","v2","update","dt","gameOver","gainScore","string","audioEngine","playEffect","stopAllActions","director","loadScene"],"mappings":"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","file":"Game.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\n//var aaa=require(\"Player.js\");\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        starPrefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        maxStarDuration: 0,\r\n        minStarDuration: 0,\r\n        ground: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        player: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        scoreDisplay: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n        scoreAudio: {\r\n            default: null,\r\n            type: cc.AudioClip\r\n        },\r\n        listener: null,\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n    lg: function (s) {\r\n        console.log(s);\r\n    },\r\n\r\n    onTouchBegan: function (touch, event) {\r\n        var target = event.getCurrentTarget();\r\n        // this.lg(\"FFFF\"+JSON.stringify(target));\r\n        var x = touch.getLocation().x;\r\n        //target.convertToNodeSpace(touch.getLocation())\r\n        //var t=this;\r\n\r\n        if (target)\r\n            //  var size = cc.director.getWinSize();//获取屏幕大小\r\n            //   var x = size.width / 2;      //  x轴／2即为x轴中点\r\n            if (/*touch.getLocation()<x*/x < 500) {\r\n                target.player.getComponent(\"Player\").accLeft = true;\r\n                // this.player.accLeft = true;\r\n            } else {\r\n                target.player.getComponent(\"Player\").accRight = true;\r\n                // this.player.accRight = true;\r\n            }\r\n        return true;\r\n    },\r\n    onTouchMoved: function (touch, event) {\r\n        //      //获取所监听的node对象（widget）\r\n        //  var target = event.getCurrentTarget();\r\n        //      var delta = touch.getDelta();\r\n        //      target.x += delta.x;\r\n        //      target.y += delta.y;\r\n        //      //获取当前点击点相对于监听对象的位置坐标\r\n        //      var localPos = target.convertToNodeSpace(touch.getLocation());\r\n    },\r\n    onTouchEnded: function (touch, event) {\r\n        // var size = cc.director.getWinSize();//获取屏幕大小\r\n        // var x = size.width / 2;      //  x轴／2即为x轴中点\r\n        var target = event.getCurrentTarget();\r\n        var x = touch.getLocation().x;\r\n        if (/*touch.getLocation()<x*/x < 500) {\r\n            this.player.getComponent(\"Player\").accLeft = false;\r\n        } else {\r\n            this.player.getComponent(\"Player\").accRight = false;\r\n        }\r\n    },\r\n\r\n\r\n    onLoad: function () {\r\n        if (!this.ground) {\r\n            console.log(\"fuck\");\r\n        }\r\n        if (!this.player) {\r\n            console.log(\"fuck\");\r\n        }\r\n        if (!this.scoreDisplay) {\r\n            console.log(\"fuck\");\r\n        }\r\n        this.groundY = this.ground.y + this.ground.height / 2;\r\n        // console.log(\"hi this\");\r\n        this.timer = 0;\r\n        this.starDuration = 0;\r\n        this.spawnNewStar();\r\n        this.score = 0;\r\n        this.ground.game = this;\r\n        this.ground.player = this.player;\r\n        this.player.accLeft = false;\r\n        this.player.accRight = false;\r\n        this.listener = cc.EventListener.create({\r\n            event: cc.EventListener.TOUCH_ONE_BY_ONE,\r\n            swallowTouches: true,\r\n            onTouchBegan: this.onTouchBegan.bind(this), //bindthis是必要的\r\n            onTouchMoved: this.onTouchMoved.bind(this),\r\n            onTouchEnded: this.onTouchEnded.bind(this),\r\n            //.bind(this)\r\n        });\r\n        //注册监听器\r\n        //param:widget是此监听器所要监听的cc.Node对象\r\n        cc.eventManager.addListener(this.listener, this.ground); //这里必须thisground但是其实点其他地方也可以\r\n        //如果需要监听其它的node对象需要clone一个新的监听器对象，用法如下：\r\n        // cc.eventManager.addListener(listener.clone(), this.getChildByName(\"another_node\"));\r\n\r\n\r\n    },\r\n    spawnNewStar: function () {\r\n        // console.log(\"hi in\");\r\n        var newStar = cc.instantiate(this.starPrefab);\r\n        this.node.addChild(newStar);\r\n        newStar.setPosition(this.getNewStarPosition());\r\n        newStar.getComponent('Star').game = this;\r\n        this.starDuration = this.minStarDuration + Math.random() * (this.maxStarDuration - this.minStarDuration);\r\n        this.timer = 0;\r\n    },\r\n    getNewStarPosition: function () {\r\n        var randX = 0;\r\n        var randY = this.groundY + Math.random() * this.player.getComponent('Player').jumpHeight + 50;\r\n        var maxX = this.node.width / 2;\r\n        randX = (Math.random() - 0.5) * 2 * maxX;\r\n        return cc.v2(randX, randY);\r\n        // return cc.v2(0,400);\r\n    },\r\n\r\n    // start () {\r\n    //\r\n    // },\r\n\r\n    update: function (dt) {\r\n        if (this.timer > this.starDuration) {\r\n            this.gameOver();\r\n            return;\r\n        }\r\n        this.timer += dt;\r\n    },\r\n    gainScore: function () {\r\n        this.score += 1;\r\n        this.scoreDisplay.string = \"Score\" + this.score;\r\n        cc.audioEngine.playEffect(this.scoreAudio, false);\r\n    },\r\n    gameOver: function () {\r\n        this.player.stopAllActions();\r\n        cc.director.loadScene('game');\r\n    },\r\n\r\n\r\n\r\n});\r\n"]}